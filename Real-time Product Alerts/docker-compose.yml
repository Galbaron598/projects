version: "2.4"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 5s
      retries: 10

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   # external access (host)
      - "29092:29092" # internal access (between containers)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 5s
      retries: 10

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 10
  producer:
    build:
      context: .
      dockerfile: Dockerfile.python_service
    command: python producer.py
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy


  sales_consumer:
    build:
      context: .

      dockerfile: Dockerfile.python_service
    command: python sales_consumer.py
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy

  alert_consumer:
    build:
      context: .
      dockerfile: Dockerfile.node_service
    command: node alertConsumer.js
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy

  alert_service:
    build:
      context: .
      dockerfile: Dockerfile.python_service
    ports:
      - "4000:4000"
    command: uvicorn alert_service:app --host 0.0.0.0 --port 4000
    depends_on:
     redis:
      condition: service_healthy

  alerts_ui:
    build:
      context: .
      dockerfile: Dockerfile.alerts_ui
    ports:
      - "3000:3000"
    depends_on:
      - alert_service
